<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Description>Azure CosmosDB/DocumentDB Provider for ASP.NET Identity 2.0 framework. Requires a DocumentDB instance with a Session connection policy. Important! This package should be upgraded to the ElCamino.AspNetCore.Identity.CosmosDB package. Check here https://github.com/dlmelendez/identitycosmosdb for migration information.</Description>
    <Copyright>Copyright ©  2019 David Melendez, MIT License</Copyright>
    <AssemblyTitle>Azure Table Storage Provider for ASP.NET Identity Core</AssemblyTitle>
    <Authors>David Melendez</Authors>
    <TargetFramework>net452</TargetFramework>

    <RootNamespace>ElCamino.AspNet.Identity.DocumentDB</RootNamespace>
    <AssemblyName>ElCamino.AspNet.Identity.DocumentDB</AssemblyName>
    <AssemblyOriginatorKeyFile>../../tools/Key.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <PublicSign Condition=" '$(OS)' != 'Windows_NT' ">true</PublicSign>
    <PackageId>ElCamino.AspNet.Identity.DocumentDB</PackageId>
    <PackageTags>ASP.NET Identity 2.0 Azure DocumentDB CosmosDB MVC UserStore RoleStore UserManager</PackageTags>
    <PackageReleaseNotes>
      Azure CosmosDB/DocumentDB Provider for ASP.NET Identity 2.0 framework. Requires a DocumentDB instance with a Session connection policy.
      Important! This package should be upgraded to the ElCamino.AspNetCore.Identity.CosmosDB package. Check here https://github.com/dlmelendez/identitycosmosdb for migration information.
    </PackageReleaseNotes>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/dlmelendez/identitydocumentdb.git</RepositoryUrl>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Version>1.3.1</Version>
    <PackageProjectUrl>https://github.com/dlmelendez/identitydocumentdb</PackageProjectUrl>
    <PackageIcon>projectNugetPic.png</PackageIcon>
    <DebugType>Full</DebugType>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>../../tools/Key.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;net45</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE;net45</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Signed|AnyCPU'">
    <OutputPath>bin\Signed\</OutputPath>
    <DefineConstants>TRACE;net45</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.AspNet.Identity.Core" Version="2.2.2" />
    <PackageReference Include="Microsoft.CSharp" Version="4.3.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
    <PackageReference Include="Microsoft.Azure.DocumentDB" Version="1.13.4" />

  </ItemGroup>
  <ItemGroup>
    <None Include="app.config">
      <SubType>Designer</SubType>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="System.Configuration" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="IdentityResources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>IdentityResources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Update="IdentityResources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>IdentityResources.resx</DependentUpon>
    </None>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="StoredProcs\getUserByEmail_sproc.js" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="StoredProcs\getUserByUserName_sproc.js" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="StoredProcs\getUserById_sproc.js" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="StoredProcs\getUserByLogin_sproc.js" />
  </ItemGroup>
  <ItemGroup>
    <None Include="projectNugetPic.png" Pack="true" PackagePath="\" />
  </ItemGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  -->
  <Target Name="AfterBuild" Condition=" '$(Configuration)' == 'Signed' ">
    <!--<Delete Files="$(TargetDir)*.nupkg" />-->
    <!-- Create NuGet Package -->
    <!--<Exec Command="$(SolutionDir)3rdParty\NuGet\Nuget.exe pack $(ProjectPath) -Prop Configuration=$(Configuration) -Symbols -OutputDirectory $(TargetDir)" />
    <Delete Files="$(TargetDir)*.zip" />-->
    <!-- 7-zip dlls-->
    <!--<Exec Command="$(SolutionDir)3rdParty\7-zip\7z.exe a $(TargetDir)$(TargetName)_$(Configuration).zip $(TargetPath) $(TargetDir)$(TargetName).pdb" />-->
  </Target>
</Project>